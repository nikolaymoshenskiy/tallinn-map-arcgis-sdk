import{b0 as o,b1 as g,aY as m,b2 as n,au as a,v as p,y as l,A as c}from"./index-CpEBwgYb.js";import{t as d}from"./highlightReasons-BWwK8Xmo.js";import{f as u,y as w}from"./LayerView-B6w9L9qi.js";import{t as y}from"./GraphicContainer-DcTUXJlr.js";import{V}from"./GraphicsView2D-vQ2Agngd.js";import{e as f}from"./HighlightCounter-B_0I_j4U.js";import"./Container-BcF0t0Be.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-DRPvVVKX.js";import"./AGraphicContainer-JaQbPAal.js";import"./TechniqueInstance-DKbwDBt7.js";import"./UpdateTracking2D-Dunhz78E.js";import"./BindType-BmZEZMMh.js";import"./Util-Bvc0ctSI.js";import"./Program-Bw42lM0I.js";import"./LabelMetric-DBgjSCLj.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-r7-QpPxK.js";import"./TileContainer-qrGyg-bC.js";import"./WGLContainer-BVk_EOCF.js";import"./ProgramTemplate-Bg3i-DR6.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-yfX2u20R.js";import"./config-MDUrh2eL.js";import"./earcut-C1Q5KFdX.js";import"./featureConversionUtils-CJYQdFhy.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DgKNXPxc.js";import"./CIMSymbolHelper-Dc62DEV1.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-DuCZhugw.js";import"./GeometryUtils-ZQdssNyK.js";import"./Rect-CUzevAry.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-1zrDQTjG.js";import"./TimeOnly-DUfmec6Z.js";import"./timeSupport-BdXBlSq1.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-DTAla0q_.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(n);return e!=null&&e.length?(this._addHighlight(e,t),a(()=>this._removeHighlight(e,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightReason(r),h=d(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};p([l()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const oi=s;export{oi as default};
