import{v as n,y as r,A as u,B as y,aC as d,aE as h,aD as l,X as x}from"./index-CpEBwgYb.js";import{d as G}from"./Association-BwhuGLxC.js";let a=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};n([r({type:Boolean,json:{write:!0}})],a.prototype,"maxGeometryCountExceeded",void 0),n([r({type:[G],json:{write:!0}})],a.prototype,"associations",void 0),a=n([u("esri.rest.networks.support.AssociationGeometriesResult")],a);const $=a;async function w(o,s,e){const t=d(o),i={...s.toJSON(),f:"json"},c=h({...t.query,...i});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>A(f,s.outSpatialReference))}function A(o,s){const{data:e}=o,t=$.fromJSON(e);if(s)for(const i of t.associations)i.geometry.spatialReference=s.clone();return t}export{w as synthesizeAssociationGeometries};
